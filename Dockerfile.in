FROM bitnami/minideb:jessie

ARG PHP_VERSION
ENV PHP_VERSION=$PHP_VERSION
ARG NGINX_VERSION
ENV NGINX_VERSION=$NGINX_VERSION
ARG DRUSH_VERSION
ENV DRUSH_VERSION=$DRUSH_VERSION
ARG WP_CLI_VERSION
ENV WP_CLI_VERSION=$WP_CLI_VERSION
ARG MAILHOG_VERSION
ENV MAILHOG_VERSION=$MAILHOG_VERSION

ENV DEBIAN_FRONTEND noninteractive
ENV TERM xterm
ENV MH_SMTP_BIND_ADDR 127.0.0.1:1025
ENV PHP_INI /etc/php/7.1/fpm/php.ini
ENV PATH="/root/.composer/vendor/bin:$PATH"
ENV NGINX_SITE_TEMPLATE /etc/nginx/nginx-site.conf
ENV NGINX_DOCROOT /var/www/html
# Defines vars in colon-separated notation to be subsituted with values for NGINX_SITE_TEMPLATE on start
ENV NGINX_SITE_VARS '$NGINX_DOCROOT'

RUN apt-get -qq update && \
	apt-get -qq install --no-install-recommends --no-install-suggests -y \
        procps \
        curl \
        ca-certificates \
        apt-transport-https \
        wget && \
    wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \
    echo "deb https://packages.sury.org/php/ jessie main" > /etc/apt/sources.list.d/php.list && \
    wget -q -O /tmp/nginx_signing.key http://nginx.org/keys/nginx_signing.key && \
    apt-key add /tmp/nginx_signing.key && \
    echo "deb http://nginx.org/packages/debian/ jessie nginx" >> /etc/apt/sources.list && \
	apt-get -qq update && \
	apt-get -qq install --no-install-recommends --no-install-suggests -y \
        less \
        git \
        mysql-client \
        ${PHP_VERSION}-curl \
        ${PHP_VERSION}-cgi \
        ${PHP_VERSION}-cli \
        ${PHP_VERSION}-common \
        ${PHP_VERSION}-fpm \
        ${PHP_VERSION}-gd \
        ${PHP_VERSION}-json \
        ${PHP_VERSION}-mysql \
        ${PHP_VERSION}-mbstring \
        ${PHP_VERSION}-xml \
        ${PHP_VERSION}-xmlrpc \
        ${PHP_VERSION}-mcrypt \
        ${PHP_VERSION}-opcache \
        ${PHP_VERSION}-soap \
        ${PHP_VERSION}-readline \
        ${PHP_VERSION}-xdebug \
        nginx \
        libcap2-bin \
        supervisor sudo \
        iputils-ping telnet netcat6 iproute2 \
        vim nano gettext ncurses-bin zip unzip  && \
    apt-get -qq autoremove -y && \
    apt-get -qq clean -y && \
	rm -rf /var/lib/apt/lists/* && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

ADD "https://github.com/mailhog/MailHog/releases/download/v${MAILHOG_VERSION}/MailHog_linux_amd64" /usr/local/bin/mailhog
ADD "https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar" /usr/local/bin/drush
ADD "https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar" /usr/local/bin/wp-cli
ADD files /

RUN rm /etc/php/7.1/cli/php.ini && \
    ln -s /etc/php/7.1/fpm/php.ini /etc/php/7.1/cli/php.ini && \
    mkdir -p /etc/nginx/sites-enabled && \
    touch /var/log/php-fpm.log && \
    chown nginx:nginx /var/log/php-fpm.log && \
    chown -R nginx:nginx /var/run && \
    touch /var/log/nginx/access.log && \
    touch /var/log/nginx/error.log && \
    chown -R nginx:nginx /var/log/nginx/ && \
    mkdir -p /var/lib/nginx/logs && \
    touch /var/lib/nginx/logs/error.log && \
    chown nginx:nginx /var/lib/nginx/logs/error.log && \
    chmod ugo+x /usr/local/bin/* && \
    chmod ugo+x /start.sh

VOLUME /var/log/nginx
EXPOSE 443 80 8025
HEALTHCHECK --interval=5s --retries=5 CMD curl --fail http://localhost/healthcheck/ || exit 1
CMD ["/start.sh"]
